import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.Random;

public class ReactionTimeApp {

    private static int clickCount = 0;
    private static final Random random = new Random();
    private static final int PANEL_WIDTH = 600;
    private static final int PANEL_HEIGHT = 400;
    private static final int GAME_DURATION_MS = 60000; // 1 minute

    public static void main(String[] args) {
        JFrame frame = new JFrame("Reaction Button Game");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(PANEL_WIDTH, PANEL_HEIGHT);

        // Custom JPanel with background message
        JPanel panel = new JPanel(null) {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                Graphics2D g2d = (Graphics2D) g;
                g2d.setFont(new Font("SansSerif", Font.BOLD, 32));
                g2d.setColor(new Color(10, 10, 10)); // Dark, tempting color
                g2d.drawString("I bet you can't click me", 100, 200);
            }
        };

        frame.add(panel);

        // Clickable button
        JButton button = new JButton("Click Me!");
        button.setBounds(100, 100, 120, 50);
        panel.add(button);

        // Click count label
        JLabel countLabel = new JLabel("Clicks: 0");
        countLabel.setBounds(10, 10, 120, 30);
        countLabel.setFont(new Font("SansSerif", Font.BOLD, 14));
        panel.add(countLabel);

        // Timer to move button every second
        Timer moveTimer = new Timer(1000, null);

        // Button click logic
        button.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                clickCount++;
                countLabel.setText("Clicks: " + clickCount);
                moveButton(button, panel);
            }
        });

        // Move button automatically every second
        moveTimer.addActionListener(e -> moveButton(button, panel));
        moveTimer.start();

        // Timer to stop game after 1 minute
        new Timer(GAME_DURATION_MS, e -> {
            moveTimer.stop();
            button.setEnabled(false);
            JOptionPane.showMessageDialog(frame,
                    "Time's up! Your score: " + clickCount,
                    "Game Over",
                    JOptionPane.INFORMATION_MESSAGE);
        }).start();

        frame.setVisible(true);
    }

    private static void moveButton(JButton button, JPanel panel) {
        int buttonWidth = button.getWidth();
        int buttonHeight = button.getHeight();
        int maxX = panel.getWidth() - buttonWidth;
        int maxY = panel.getHeight() - buttonHeight;

        int x = random.nextInt(Math.max(maxX, 1));
        int y = random.nextInt(Math.max(maxY, 1));
        button.setLocation(x, y);
    }
}
